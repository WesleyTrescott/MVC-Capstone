@model IEnumerable<User_Login.Models.Tbl_Jobs> 

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<br />
<br />
<br />
<div class="container">
    <div class="jumbotron" style="margin-bottom:0px;">
        <h1 style="text-align:center; font-family:'Agency FB'; font-weight:bold;">Search For Jobs</h1>
        <p style="text-align:center; font-family:'Agency FB';">...And Apply Easily, Just Create A Profile With Us!</p>
    </div>
</div>

@*<div id="searchGrid">
    @{
        var grid = new WebGrid(Model, defaultSort:"Position", canPage:true, rowsPerPage:10);
        var db = Database.Open("DBEntities");
        var query = "SELECT DISTINCT Job_Position FROM Tbl_Jobs ORDER BY State";
        var countries = db.Query(query);
        query = "SELECT * FROM Tbl_Jobs  WHERE Job_Position LIKE @0 AND State LIKE @1";
        var Job_Position = "%" + Request["Job_Position"] + "%";
        var State = "%" + Request["State"] + "%";
        var data = db.Query(query, Job_Position, State);
        //var columns = new[] { "CustomerID", "CompanyNa+++++me", "ContactName", "Address", "City", "Country", "Phone" };
        var grid = new WebGrid(data, columnNames: columns, rowsPerPage: 6);
    }
    Position: <input type="text" name="company" value="@Request["company"]" />
    Location: <select name="country">
        <option></option>
        @foreach (var item in Model)
        {
            <option @(Request["Location"] == item.State ? " selected=\"selected\"" : "")>@item.State</option>
        }
    </select>
    <input type="submit" />

    @grid.GetHtml(columns: grid.Columns(
    grid.Column("Job_Position", "Position", style: ".position"),
    grid.Column("Job_Description", "Description", style: "description", canSort: false),
    grid.Column("City", style: "city"),
    grid.Column("State", style: "state"),
    grid.Column("Country", style: "country"),
    grid.Column(format: (item) => @Html.ActionLink("Details", "Details", new {id = @item.Job_Id}, null))
    //,grid.Column("Skills", style:"skills")
    ), tableStyle: ".searchGrid", rowStyle: "height: 100px"
    )
</div>*@

@*@section script{
    <script type="text/javascript">
    $(function(){
        $('tbody tr').live('hover', function(){
            $(this).toggleClass('clickable');
        }).live('click', function(){
            location.href = '/Details/' + $(this).find('td:first').text();
        });
    });
    </script>
    }*@

<style type="text/css">
    .clickable {
        cursor:pointer;
    }
    .searchGrid {
        height: 200px;
        border:dashed;
        align-content:center;
    }
    .position {
        width: 500px;
        text-align:center;
    }
    .description {
        width: 700px;
    }
    .city{
        width: 100px;
    }
    .state {
        width: 50px;
    }
    .country{
        width: 100px;
    }
    .skills{
        width: 400px;
    }
    .mytable tbody tr td{
          max-width:200px; 
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
    }
    /*tr:hover td:hover{
       overflow:visible;
       word-wrap:break-word;
       word-break:break-all;
    }*/
</style>

@*@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Job</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Job_Position, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Job_Position)
                @Html.ValidationMessageFor(model => model.Job_Position)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Job_Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Job_Description)
                @Html.ValidationMessageFor(model => model.Job_Description)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Customer_ID, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer_ID)
                @Html.ValidationMessageFor(model => model.Customer_ID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Country, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Country)
                @Html.ValidationMessageFor(model => model.Country)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.State)
                @Html.ValidationMessageFor(model => model.State)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City)
                @Html.ValidationMessageFor(model => model.City)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Skills, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Skills)
                @Html.ValidationMessageFor(model => model.Skills)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Min_Exp_Req, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Min_Exp_Req)
                @Html.ValidationMessageFor(model => model.Min_Exp_Req)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Max_Exp_Req, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Max_Exp_Req)
                @Html.ValidationMessageFor(model => model.Max_Exp_Req)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Start_Date, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Start_Date)
                @Html.ValidationMessageFor(model => model.Start_Date)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.End_Date, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.End_Date)
                @Html.ValidationMessageFor(model => model.End_Date)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PayRate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PayRate)
                @Html.ValidationMessageFor(model => model.PayRate)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

<link rel="stylesheet" href="http://cdn.datatables.net/1.10.2/css/jquery.dataTables.min.css">
<script type="text/javascript" src="http://cdn.datatables.net/1.10.2/js/jquery.dataTables.min.js"></script>

<br />
<div class="container">
@using (Html.BeginForm("Index", "JobSearch", FormMethod.Get))
{
    <table cellspacing="20" cellpadding="20">
        <tr>
            <td>
                <label for="location">Filter By Location</label> 
            </td>
            <td>
                @Html.DropDownList("city", new SelectList(ViewBag.Location), "Select One", new { @class = "form-control btn-default btn-block", @id = "location" })
            </td>
        </tr>
        <tr>
            <td>
                <p></p>
            </td>
        </tr>
        <tr>
            <td>
                <p></p>
            </td>
        </tr>
        <tr>
            <td>
                <label for="customer">Filter By Customer</label>   
            </td>
            <td>
                @Html.DropDownList("customer", new SelectList(ViewBag.Customer), "Select One", new { @class = "form-control btn-default btn-block", @id = "customer" })
            </td>
        </tr>
    </table>
    <br />
    <button type="submit" class="btn btn-primary btn-submit">Filter Jobs   <span class="glyphicon glyphicon-filter"></span></button>
}

    <br />
<div id="test">
<table id="tblJobListings" class="table table-hover table-condensed ae-pagination mytable hidden-sm hidden-xs">
    <tr>
        <td class="col-md-2">
            Job Position
        </td>
        <td class="mytable">
            Job Description
        </td>
        <td class="col-md-2">
            Location
        </td>
        <td>
            Skills
        </td>
    </tr>

    @foreach (var item in Model) { 
    <tr>
        <td>
            @Html.Encode(item.Position) 
        </td>
        <td>
            @Html.Encode(item.Profile_Description)
        </td>
        <td>
            @Html.Encode(item.City_Name) @Html.Encode(item.State_Name) @*@Html.Encode(item.Country)*@
        </td>
        @*<td>
            @Html.Encode(item.State)
        </td>
        <td>
            @Html.Encode(item.City)
        </td>*@
        <td>
            @Html.Encode(item.Required_Skills)
        </td>
        @*<td>
            @Html.Encode(item.Start_Date)

        </td>
        <td>
            @Html.Encode(item.End_Date)
        </td>
        <td>
            @Html.Encode(item.PayRate)
        </td>*@
        <td>
            @*@Html.ActionLink("Details", "Details", new { id = @item.Job_Id }, null)*@
            @*<button id="btnDetails" class="btn btn-default" data-toggle="popover">Details</button>*@
            @*<button id="btnDetails" class="btn btn-default" data-toggle="popover"></button>*@
            @*<a href="#" id="btnDetails" class="btn btn-default" data-toggle="popover" tabindex="5" data-trigger="focus" title="Details" data-content="Default popover">Details</a>*@
            @*<a href="#" id="btnDetails" class="btn btn-default" data-toggle="popover" tabindex="5" data-trigger="focus" title="Details" data-content="Default popover"></a>*@
            <input type="button" class="btn btn-default" value="Details" onclick="window.location.href='@Url.Action("Details", "JobSearch" , new { id=@item.Job_Id })'" />
        </td>
    </tr>
     }
</table>
    <table class="table table-condensed mytable table-responsive visible-sm visible-xs">
        <tr>
            <td class="col-md-2">Job Position</td>
            <td class="col-md-2">Location</td>
        </tr>
        @foreach(var item in Model)
        {
            <tr>
                <td>@Html.Encode(item.Position)</td>
                <td>@Html.Encode(item.City_Name)</td>
                <td><input type="button" class="btn btn-default" value="Details" onclick="window.location.href='@Url.Action("Details", "JobSearch" , new { id=@item.Job_Id })'" /></td>
            </tr>
        }
    </table>
    </div>
</div>
<script>
    $(document).ready(function () {
        $('#tblJobListings').dataTable({
            pagingType: "bootstrapPager",
            pagerSettings: {
                textboxWidth: 70,
                firstIcon: "",
                previousIcon: "glyphicon glyphicon-arrow-left",
                nextIcon: "glyphicon glyphicon-arrow-right",
                lastIcon: "",
                searchOnEnter: true,
                language: "Page ~ of ~ pages"
            }
        });

        $('#test').click(function () {
            $('#tblJobListings').slideUp("slow");
        })
    });
</script>